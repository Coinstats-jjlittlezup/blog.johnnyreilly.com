(window.webpackJsonp=window.webpackJsonp||[]).push([[296],{1211:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),o=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=o.a.createContext({}),c=function(e){var t=o.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},b=function(e){var t=c(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=c(a),d=n,u=b["".concat(i,".").concat(d)]||b[d]||h[d]||r;return a?o.a.createElement(u,l(l({ref:t},p),{},{components:a})):o.a.createElement(u,l({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1253:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ts-loader-9-112c5f80a38e07672a6daf1ba71870cf.png"},133:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return c}));var n=a(4),o=a(10),r=(a(0),a(1211)),i={title:"ts-loader goes webpack 5",author:"John Reilly",author_url:"https://github.com/johnnyreilly",author_image_url:"https://blog.johnnyreilly.com/img/profile.jpg",tags:["webpack","ts-loader","TypeScript","webpack 5"],image:"blog/2021-04-20-ts-loader-goes-webpack-5/ts-loader-9.png",hide_table_of_contents:!1},l={permalink:"/2021/04/20/ts-loader-goes-webpack-5",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/blog/2021-04-20-ts-loader-goes-webpack-5.md",source:"@site/blog/2021-04-20-ts-loader-goes-webpack-5.md",title:"ts-loader goes webpack 5",description:"ts-loader has just released v9.0.0. This post goes through what this release is all about, and what it took to ship this version. For intrigue, it includes a brief scamper into my mental health along the way. Some upgrades go smoothly - this one had some hiccups. But we'll get into that.",date:"2021-04-20T00:00:00.000Z",formattedDate:"April 20, 2021",tags:[{label:"webpack",permalink:"/tags/webpack"},{label:"ts-loader",permalink:"/tags/ts-loader"},{label:"TypeScript",permalink:"/tags/type-script"},{label:"webpack 5",permalink:"/tags/webpack-5"}],readingTime:6.285,truncated:!1,nextItem:{title:"Hello World Bicep",permalink:"/2021/04/10/hello-world-bicep"}},s=[{value:"One big pull request",id:"one-big-pull-request",children:[]},{value:"What&#39;s changed",id:"whats-changed",children:[]},{value:"The hole",id:"the-hole",children:[]},{value:"&quot;Anybody down there?&quot;",id:"anybody-down-there",children:[]},{value:"Release details",id:"release-details",children:[]}],p={toc:s};function c(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," has just released ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/releases/tag/v9.0.0"},"v9.0.0"),". This post goes through what this release is all about, and what it took to ship this version. For intrigue, it includes a brief scamper into my mental health along the way. Some upgrades go smoothly - this one had some hiccups. But we'll get into that."),Object(r.b)("p",null,Object(r.b)("img",{alt:"hello world bicep",src:a(1253).default})),Object(r.b)("h2",{id:"one-big-pull-request"},"One big pull request"),Object(r.b)("p",null,"As of v8, ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," supported webpack 4 and webpack 5. However the webpack 5 support was best efforts, and not protected by any automated tests. ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," has two test packs:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"A ",Object(r.b)("a",{parentName:"li",href:"https://github.com/TypeStrong/ts-loader/tree/main/test/comparison-tests#readme"},"comparison test pack")," that compares transpilation and webpack compilation output with known outputs."),Object(r.b)("li",{parentName:"ol"},"An ",Object(r.b)("a",{parentName:"li",href:"https://github.com/TypeStrong/ts-loader/tree/main/test/execution-tests#readme"},"execution test pack")," that executes Karma test packs written in TypeScript using ",Object(r.b)("inlineCode",{parentName:"li"},"ts-loader"),".")),Object(r.b)("p",null,"The test packs were tightly coupled to webpack 4 (and in the case of the comparison test pack, that's unavoidable). The mission was to port ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," to be built against (and have an automated test pack that ran against) webpack 5. "),Object(r.b)("p",null,"This ended up being a ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251"},"very big pull request"),". Work on it started back in February 2021 and we're shipping now in April of 2021. I'd initially expected it would take a couple of days at most. I had underestimated."),Object(r.b)("p",null,"A number of people collaborated on this PR, either with code, feedback, testing or even just responding to questions.  So I'd like to say thank you to:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/JonWallsten"},"John Wallsten")," - who did a lot of the work swapping ",Object(r.b)("inlineCode",{parentName:"li"},"ts-loader")," over to webpack 5 APIs  "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/appzuka"},"Nick Excell")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/andrewbranch"},"Andrew Branch")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/alexander-akait"},"Alexander Akait")," - who provided webpack 5 expertise and ideas"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/sokra"},"Tobias Koppers")," - who got me out of a hole - more on that later")),Object(r.b)("h2",{id:"whats-changed"},"What's changed"),Object(r.b)("p",null,"Let's go through what's different in v9. There's two breaking changes:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The minimum webpack version supported is now webpack 5. This simplifies the codebase, which previously had to if/else the various API registrations based on the version of webpack being used."),Object(r.b)("li",{parentName:"ul"},"The minimum node version supported is now node 12. ",Object(r.b)("a",{parentName:"li",href:"https://nodejs.org/en/about/releases/"},"Node 10 reaches end of life status at the end of April 2021."))),Object(r.b)("p",null,"An interesting aspect of migrating to building against webpack 5 was dropping the dependency upon ",Object(r.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@types/webpack"},Object(r.b)("inlineCode",{parentName:"a"},"@types/webpack"))," in favour of the types that now ship with webpack 5 itself. This was a mostly great experience; however we discovered some missing pieces. "),Object(r.b)("p",null,"Most notably, the ",Object(r.b)("inlineCode",{parentName:"p"},"LoaderContext")," ",Object(r.b)("a",{parentName:"p",href:"https://github.com/webpack/webpack/blob/03961f33912ab6735d470b870eacff678735a9ed/lib/NormalModule.js#L424"},"wasn't strongly typed"),". ",Object(r.b)("inlineCode",{parentName:"p"},"LoaderContext")," is the value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," in the context of a running loader function.  So it is probably the most interesting and important type from the perspective of a loader author."),Object(r.b)("p",null,"Historically we used our own definition which had been adapted from the one in ",Object(r.b)("inlineCode",{parentName:"p"},"@types/webpack"),". ",Object(r.b)("a",{parentName:"p",href:"https://github.com/webpack/webpack/issues/13162"},"I've looked into the possibility of a type being exposed in webpack itself.")," However, it turns out, ",Object(r.b)("a",{parentName:"p",href:"https://github.com/webpack/webpack/pull/13164#issuecomment-821410359"},"it's complicated - with the ",Object(r.b)("inlineCode",{parentName:"a"},"LoaderContext")," type being effectively created across two packages"),". The type is initially created in ",Object(r.b)("inlineCode",{parentName:"p"},"webpack")," and then augmented later in ",Object(r.b)("inlineCode",{parentName:"p"},"loader-runner"),", prior to being supplied to loaders. You can read more on that ",Object(r.b)("a",{parentName:"p",href:"https://github.com/webpack/webpack/pull/13164#issuecomment-821410359"},"here"),"."),Object(r.b)("p",null,"For now we've opted to stick with keeping ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/acbc71feed91fe14ec065dd9d31081af7a492f47"},"an interface in ",Object(r.b)("inlineCode",{parentName:"a"},"ts-loader"))," that models what arrives in the loader when executed.  We have freshened it up somewhat, to model the webpack 5 world."),Object(r.b)("p",null,"Alongside these changes, a ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251/files#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519"},"number of dependencies were upgraded"),"."),Object(r.b)("h2",{id:"the-hole"},"The hole"),Object(r.b)("p",null,"By the 19th of February most of the work was done.  However, ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-781967959"},"we were experiencing different behaviour between Linux and Windows in our comparison test pack"),". "),Object(r.b)("p",null,"As far as I was aware, we were doing all the appropriate work to ensure ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," and our test packs worked cross platform.  But we were still experiencing problems whenever we ran the test pack on Windows. I'd done no end of tweaking but nothing worked.  I couldn't explain it. I couldn't fix it.  I was finding that tough to deal with.  "),Object(r.b)("p",null,"I really want to be transparent about the warts and all aspect of open source software development.  It is like all other types of software development; sometimes things go wrong and it can be tough to work out why. Right then, I was really quite unhappy. Things weren't working code-wise and I was at a loss to say why. This is not something that I dig."),Object(r.b)("p",null,"I also wasn't sleeping amazingly at this point. It was winter and we'd been in lockdown in the UK for three months; as the COVID-19 pandemic ground relentlessly on. I love my family dearly. I really do. With that said, having my children around whilst I attempted to work was remarkably tough. I love those guys but, woah, was it stressful."),Object(r.b)("p",null,"I was feeling at a low ebb. And I wasn't sure what to do next. So, feeling tired and pretty fed up, I took a break."),Object(r.b)("h2",{id:"anybody-down-there"},'"Anybody down there?"'),Object(r.b)("p",null,"Time passed. In March ",Object(r.b)("a",{parentName:"p",href:"https://github.com/alexander-akait"},"Alexander Akait")," checked in to see how things were going and volunteered to help. He also ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-799531375"},"suggested what turned out to be the fix"),"; namely replacing usage of ",Object(r.b)("inlineCode",{parentName:"p"},"'\\'")," with  ",Object(r.b)("inlineCode",{parentName:"p"},"'/'")," in the assets supplied back to webpack. But crucially I implemented this wrong. Observe ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/4bcc5c9623acfd7ffbaf028781a8353b37243804"},"this commit"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"  const assetPath = path\n    .relative(compilation.compiler.outputPath, outputFile.name)\n    // According to @alexander-akait we should always '/' https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-799606985\n    .replace(/\\//g, '/');\n")),Object(r.b)("p",null,"If you look closely at the ",Object(r.b)("inlineCode",{parentName:"p"},"replace")," you'll see that I'm globally replacing ",Object(r.b)("inlineCode",{parentName:"p"},"'/'")," with  ",Object(r.b)("inlineCode",{parentName:"p"},"'/'")," ",Object(r.b)("em",{parentName:"p"},"rather")," than globally replacing ",Object(r.b)("inlineCode",{parentName:"p"},"'\\'")," with  ",Object(r.b)("inlineCode",{parentName:"p"},"'/'"),". This wasted time this caused... I could weep."),Object(r.b)("p",null,"I generally thrashed around for a bit after this. Going in circles, like a six year old swimming wearing one armband. Then ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805143890"},"Tobias kindly volunteered to help"),". This much I've learned from a career in software: if a talented people offer their assistance, grab it with both hands!"),Object(r.b)("p",null,'I\'d been trying be as "learn in public" as possible about the issues I was facing on the pull request. The idea being, to surface the problems in a public forum where others can read and advise.  And also to attempt a textual kind of ',Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Rubber_duck_debugging"},"rubber duck debugging"),".  "),Object(r.b)("p",null,"When Tobias pitched in, I wanted to make it as easy as possible for him to help. So I wrote up ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805181069"},"a full description of what had changed"),". What the divergent behaviour in test packs looked like. I shared my speculation for what might be causing the issue (I was wrong by the way). Finally I provided a simple way to get up and running with the broken code. The easier I could make it for others to collaborate on this, I figured, the greater the likelihood of an answer. Tobias got to an answer quickly:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"The problem is introduced due to some normalization logic in the test case: see ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1273"},"#1273")),Object(r.b)("p",{parentName:"blockquote"},"While the PR fixes the problem, I think the paths should be normalized earlier in the pipeline to make this normalization code unnecessary. Note that asset names should have only ",Object(r.b)("inlineCode",{parentName:"p"},"/")," as they are filenames and not paths. Only absolute paths have ",Object(r.b)("inlineCode",{parentName:"p"},"\\"),".")),Object(r.b)("p",null,"Tobias had raised a PR which introduced a workaround to resolved things in the test pack. This made me happy. More than that, he also identified that the issue lay in ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," itself. This caused me to look again at the changes I'd made, including my ",Object(r.b)("inlineCode",{parentName:"p"},"replace")," addition. ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251#issuecomment-805907212"},"With fresh eyes, I now realised this was a bug"),", and ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/pull/1251/commits/427714e43519289bb5745ca078133d1ace8fc2c1"},"fixed")," it."),Object(r.b)("p",null,"I found then that I could revert Tobias' workaround and still have passing tests. Result!"),Object(r.b)("h2",{id:"release-details"},"Release details"),Object(r.b)("p",null,"Now that we've got there; we've shipped.  You can get the latest version of ",Object(r.b)("inlineCode",{parentName:"p"},"ts-loader")," on ",Object(r.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/ts-loader/v/9.0.0"},"npm")," and you can find the release details on ",Object(r.b)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-loader/releases/tag/v9.0.0"},"GitHub"),". "),Object(r.b)("p",null,"Thanks everyone - I couldn't haved done it without your help. \ud83c\udf3b\u2764\ufe0f"))}c.isMDXComponent=!0}}]);